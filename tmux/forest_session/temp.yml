# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
#pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; function waitForOdometry { rostopic wait /$UAV_NAME/mavros/local_position/odom; }

startup_window: monodepth
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=forest gui:=true
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE --enable-vio --enable-realsense-front --pos 0 0 1.5 1.57"
        - waitForOdometry; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_status status.launch
  - monodepth:
      layout: tiled
      panes:
        - waitForHw; rosrun monodepth_navigation monocular_depth_estimator.py
  - hw_api:
      layout: tiled
      panes:
        - waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  - VINS:
    layout: tiled
    panes:
      - waitForOdometry; roslaunch ov_repub simulation_bluefox.launch

  - VINS_republisher:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch vins_republish vins_republisher_openvins_bluefox.launch

  - takeoff:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'waitForOdometry; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  # - goto:
  #     layout: tiled
  #     panes:
  #       - 'history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, 10.0, 1.5, 0.0\]\"'
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - waitForOdometry; roslaunch mrs_uav_core rviz.launch
  #       - waitForOdometry; roslaunch mrs_rviz_plugins load_robot.launch
  #       - waitForOdometry; roslaunch mrs_rviz_plugins rviz_interface.launch
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - waitForOdometry; roslaunch mrs_uav_core rviz.launch rviz_config:=/home/slon/user_ros_workspace/src/monodepth_navigation/rviz/rviz_config.rviz
  #       - waitForOdometry; roslaunch mrs_rviz_plugins load_robot.launch
  #       - waitForOdometry; roslaunch mrs_rviz_plugins rviz_interface.launch
  
  - rviz:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_core rviz.launch rviz_config:=/home/slon/user_ros_workspace/src/monodepth_navigation/rviz/rviz_config.rviz
        - waitForRos; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForRos; roslaunch mrs_rviz_plugins rviz_interface.launch


  # - layout:
  #     layout: tiled
  #     panes:
  #       - waitForOdometry; sleep 3; ~/.i3/layout_manager.sh ./layout.json